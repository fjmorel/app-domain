<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolbarMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>107, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="menuAccounts.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAALFSURBVDhPjZLfS1MBFMf3B6ibc5m6JY3spV/0EEI/iB4E
        IwLxqcgopIgCIZMeEqGXiKkPShnoJArN0BlmJTpxyvJHNvW6tTYczunm/J1Td7fd7d5t3m+n3JsiHrhw
        ufecz/ec8z2SvSJiV+XwE9mLXnN2PMyo4DPJedakNHMjmQWJlP0jNJYdjK00A2EbEPoJsAbE1poRGMx0
        JVL2j3+qiEwBW/3A+idguRHbG63wGzOQSNk/QmMqbPv7IP5ph0jKsdlyxNwV2DAcPhggOKpE1KsBN3EF
        wZFzYPuOIzx5G+v6AwLY4UzESTk6/QjC70JExi6DY25htevQboBoykmJTBxZnB9XxjmTEr4fcj4wlAXe
        VU77u4Sg8Sz83ccgOEqw1KnYDeDGVZXR+VcA76bFOWjrDKJrOviHTkCYug/ech3h0Yv0/hDe9j0AIVIV
        I04qtJJdw8CmHmLA+H/e4MgFBAynsfXlKHVTCPdH+W4AO0IAzgLRPwxxawBx8j++qsUKzSvY7oBnroIb
        ygVvK4araQ/A1vdMxMgu3vkMYXsxuMk88DMPsNihoMPJBas/icDXLIT0SrBdCvg70+D7IOdX2lLNqy2y
        AonPkIE4KccWtIi6qyBMPyXYPXja0siBInIgD2x3Ot3FEI1ppmeUOu1F2FMF71uZS7Kmp5+sEREqDFuL
        yPs8xJdr4GqW09z5YHvOYJNUdy5zYOcyV97TyJ/hapBCsvQtXRearaGid4jOvUR0tgIBWwncuhyw1mII
        c2Xw9ZwC53wOcbMb4nordVsL1nITU7XJOsl8h6J0Y+IutVQNYaESIedjLA/mw6aV9dvrZYyxTio4tMle
        3/A1gpQhMvcEQdsNLPWeh7U6uVTi0UnVMy1yzXRTKuN4kyrYG1IZW71U8+u1VJ3Ys8TTKFVP0zdHXRJj
        rE0RLFVJzGRVssb0Qqr+C3/xJou49MEsAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="menuJournal.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAHRSURBVDhPrZLPixJxGMb9B/fSYdk/INqNooN1EEM8bIyz
        rqPNqIjaqqGSogMq3hJkDSs7COpBUcFf+PvQqSxG9mnel6GBtDrUAw/D9/u+z4eHL2P5b7Jare5YLDbL
        ZDLI5XLI5/NQVZW/dKb7VCqFaDS6dTgcihEzFQqFWrvd7jP+os1m893v9y+MmKl4PK7pw7sT6xv8ySS9
        KYyYKapHOn1ewP3rWzyQ3uHcV8fDl+/xSPmIx4FPPCMlEolDQDKZ5CEtnevhi1/CT4ImIJ54fRyw3+/R
        7/fR7XbRbrfRbDbRaDRQr9dRq9VQrVYZcLQBXZLo5b1eL3q9HtLpNNxuN4NWz55icHYPmqYdf4ObmxgD
        ZrMZJpMJhsMhBoMBt+l0OuxWq8U7r/RdI2YqHInwsFgsQpZlTKdTbuPz+RiWzWYhSRI3CIcjh4BgMMiA
        1WqF5XKJ+XzObQg0Ho8xGo0YRKJdI2ZKlhUelstlBAIBhpRKJeg/DYMKhQI3owayohwCrj0eBmy3W/Z6
        vf7ZhrxYLNgkj+Q9BAiCoOVV9a5SqYD89jemHafT+dWImbLb7Z3LyxdfBMEFl0u3KEK8uoIokkU+00wP
        f7PZbB+M2L/KYvkBguMRIGnY9mEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8B////Af///wH///8B////Af///wH///8BglQkn3ZJGeFxRBXhglQku////wH///8B////Af//
        /wH///8B////AaN2Qv+ecD3/mGs4/5NlM/+NYC7/h1op/4JUJP+TaDn/kGU2/3JFFv9tQBH/aTwN/2U4
        Cv9hNAb/XjED/1suAf+rfkr/s4td/7OLXf+zi13/s4td/7OLXf+zi13/fVEh/3lMHf+zi13/s4td/7OL
        Xf+zi13/s4td/7OLXf9oPA7/sINP/55wPf+Yazj/k2Uz/41gLv+HWin/glQk/6uQdP+qj3P/ckUW/21A
        Ef9pPA3/ZTgK/2E0Bv9eMQP/bD8S/7aIVP+ld0P/+fn5//n5+f/5+fn/+Pj4//Hx8f/j4+P/8/Pz//j4
        +P/5+fn/+Pj4/+np6f/4+Pj/YjUH/3BEFv+6jVj/q31J//n5+f/x8fH/7e3t/+fn5//T09P/paWl/9fX
        1//09PT/7u7u/+rq6v/c3Nz/+Pj4/2Y5C/90SBr/vpFc/7GDTv/5+fn/zMzM/8nJyf/FxcX/09PT/6am
        pv/Y2Nj/9PT0/8rKyv/Gxsb/urq6//j4+P9rPhD/ek0e/8KVYP+3iVP/+vr6//Hx8f/t7e3/6enp/9TU
        1P+mpqb/2NjY//X19f/v7+//6+vr/9zc3P/4+Pj/cUQV/39TI//GmGL/vI5Y//r6+v/MzMz/ysrK/8XF
        xf/U1NT/p6en/9jY2P/19fX/y8vL/8fHx/+7u7v/+Pj4/3dKGv+EWCj/xplj/8GTXP/6+vr/8vLy/+/v
        7//q6ur/1dXV/7W1tf/f39//9fX1//Hx8f/s7Oz/3t7e//n5+f99UCD/il4t/8aZY//Fl2D/+vr6/83N
        zf/Kysr/xsbG//Ly8v/d2NL/6+Xf//z8/P/MzMz/ycnJ/729vf/5+fn/hFcm/5FjM//GmWP/yJpj//r6
        +v/6+vr/+vr6//j4+P/ZxrH/sYNO56x+SufXxK//+fn5//n5+f/5+fn/+fn5/4tdLP+XaTj/yZtkM8mb
        ZP/TroL/0KyA/86pff/Lpnv/xqB0/7eJUy2yhE8tu5Vq/7iUav+0kGb/r4ti/6uHXv+SZDL/mWw5M///
        /wHJm2QzyZtkM8mbZDPGmGIzw5VfM8CSXDP///8B////AbOFUDOugEwzqXtHM6N2QjOecD0zmGs4M///
        /wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//w==
</value>
  </data>
</root>